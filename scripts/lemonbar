#!/usr/bin/env bash

timebar() {
    TIME=$(date "+%I:%M")

    echo -e -n "\uf017 ${TIME}"
}

datebar() {
   DATE=$(date "+%d.%m.%y")

   echo -e -n "\uf073 ${DATE}"
}

cpuload() {
    LINE=`ps -eo pcpu | grep -vE '^\s*(0.0|%CPU)' | sed -n '1h;$!H;$g;s/\n/ +/gp'`
    CPU=`bc <<< $LINE`

    echo -e -n "\uf2db ${CPU}%"
}

memused() {
    read t f <<< `grep -E 'Mem(Total|Free)' /proc/meminfo | awk '{print $2}'`
    read b c <<< `grep -E '^(Buffers|Cached)' /proc/meminfo |awk '{print $2}'`
    bc <<< "100($t -$f -$c -$b) / $t"
}

network() {
    read lo int1 int2 <<< `ip link | sed -n 's/^[0-9]: \(.*\):.*$/\1/p'`
    
    if iwconfig $int1 >/dev/null 2>&1; then
        wifi=$int1
        eth0=$int2
    else
        wifi=$int2
        eth0=$int1
    fi

    ip link show $eth0 | grep 'state UP' >/dev/null && int=$eth0 || int=$wifi

    ping -c 1 8.8.8.8 >/dev/null 2>&1 && 
        echo -e -n "\uf1eb $int connected" || echo -e -n "\uf1eb $int disconnected"
}

activewindow() {
	echo -n $(xdotool getwindowfocus getwindowname)
}

# This loop will fill a buffer with our infos, and output it to stdout.
while :; do
    padding="%{O10}"
    padding2="%{O20}"

    buf=""
    buf="${buf} %{l}${padding}$(activewindow)"
    buf="${buf} %{r}$(network)${padding2}$(cpuload)${padding2}$(datebar)${padding}$(timebar)${padding}"
    
    echo $buf
    sleep 3
done
